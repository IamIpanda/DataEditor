在 Ruby 执行脚本中，提供下述的对象：

Builder
	DataEditor Add(Name , [[[[[Actual] , Name] , Label] , Width] , Height]) { Block }
		搜索拥有 Name 短名的控件，新创建一个此控件并返回之。
		Actual 是一个字符串，用来检索数据。
		Name 是一个字符串，用来设置显示数据名称的文字
		Label 是一个数字，用来标识 Name 所述的文本的位置。
			0 ： 不显示 
			1 ： 显示在上方
			2 ： 显示在左侧
		Width 是一个数字，用来设置控件的宽度。
		Height 是一个数字，用来设置控件的高度。
		在执行完 Block 之后，将此控件加入 Controls 中。
	DataEditor In(DataContainer) 
		此后加入控件时，将在 DataContianer 中执行加入。
	DataEditor Out(DataContainer)
		此后加入控件时，将在上次执行In时的焦点中进行加入。
		若当前焦点是一个 Container，则将之设置到合适的尺寸。
	void Order (Mode)
		Mode 是一个数字，将描绘模式更改为 Mode
			-1：不进行自动排版
			0 ： 交换排版模式
			1 ： 竖直一并排放
			2 ： 水平一并排放
	void Space (Range)
		Range 是一个数字，在当前描绘模式下，将描绘位置移动过Range个距离。
	void Next ()
		将焦点移动到下一行/下一列
	void Text (Text)
		建立一个Label，并将Label设置为Text，并加入当前焦点。


Data
	[](Name)
		搜索拥有Name短名的数据，并返回此数据。
		如果这一数据不存在，则会提示询问此文件。
	[]=(Name,Value)
		搜索拥有Value名称的文件，并Load此文件，将得到的数据设置为Name的值。
	Save()
		保存所有被打开的文件。

Link
	[](Value)
		搜索与 Value 绑定的编辑控件。
	[]=(Value,Editor)
		将 Editor 绑定到 Value 值中。
	Watch(Value,Proc)
		约定回调。当Value值更改时，执行此Proc。
	Cancel(Value,Proc)
		取消指定的约定回调。

Taint
	[](Value)
		查询Value的污染状态。

Window 
	Create
		创建一个窗口。
	Title
		获取或设置当前窗口的标题
	Exist
		获取当前窗口是否存在的信息
	OpenFile

